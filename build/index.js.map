{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst makeContentEditable = WrappedComponent =>\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: props.children,\n        onEditMode: false\n      };\n      this.getIntoEditMode = this.getIntoEditMode.bind(this);\n      this.handleEnterKey = this.handleEnterKey.bind(this);\n      this.getOffEditMode = this.getOffEditMode.bind(this);\n      this.changeValue = this.changeValue.bind(this);\n    }\n    getIntoEditMode() {\n      this.setState({\n        ...this.state,\n        onEditMode: true\n      });\n    }\n    getOffEditMode() {\n      this.setState({\n        ...this.state,\n        onEditMode: false\n      });\n      if (this.props.endEditing) {\n        this.props.endEditing(this.state.value);\n      }\n    }\n    handleEnterKey(e) {\n      if (e.keyCode === 13 || e.charCode == 13) {\n        this.setState({\n          ...this.state,\n          onEditMode: false\n        });\n        if (this.props.endEditing) {\n          this.props.endEditing(this.state.value);\n        }\n      }\n    }\n    changeValue(e) {\n      this.setState({\n        ...this.state,\n        value: e.target.value\n      });\n    }\n    render() {\n      const { customStyle } = this.props;\n      return (\n        <section\n          styleName=\"wrapper\"\n          className={customStyle || \"\"}\n          onClick={this.getIntoEditMode}\n        >\n          {this.state.onEditMode ? (\n            <input\n              type=\"text\"\n              autoFocus\n              value={this.state.value}\n              styleName=\"input\"\n              onChange={this.changeValue}\n              onKeyPress={this.handleEnterKey}\n              onBlur={this.getOffEditMode}\n            />\n          ) : (\n            <span styleName=\"text\">{this.state.value}</span>\n          )}\n        </section>\n      );\n    }\n  };\n\nconst labelize = props => <section>{props.children}</section>;\n\nconst ClickToEdit = makeContentEditable(labelize);\n\nexport default ClickToEdit;\n"],"names":["makeContentEditable","props","state","children","getIntoEditMode","bind","handleEnterKey","getOffEditMode","changeValue","setState","endEditing","value","e","keyCode","charCode","target","customStyle","onEditMode","React","Component","labelize","ClickToEdit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,sBAAsB,SAAtBA,mBAAsB;;;;oBAEZC,KAAZ,EAAmB;;;iHACXA,KADW;;YAEZC,KAAL,GAAa;eACJD,MAAME,QADF;oBAEC;OAFd;YAIKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;YACKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,OAAtB;YACKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,OAAtB;YACKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBH,IAAjB,OAAnB;;;;;;wCAEgB;aACXI,QAAL,cACK,KAAKP,KADV;sBAEc;;;;;uCAGC;aACVO,QAAL,cACK,KAAKP,KADV;sBAEc;;YAEV,KAAKD,KAAL,CAAWS,UAAf,EAA2B;eACpBT,KAAL,CAAWS,UAAX,CAAsB,KAAKR,KAAL,CAAWS,KAAjC;;;;;qCAGWC,CA5BS,EA4BN;YACZA,EAAEC,OAAF,KAAc,EAAd,IAAoBD,EAAEE,QAAF,IAAc,EAAtC,EAA0C;eACnCL,QAAL,cACK,KAAKP,KADV;wBAEc;;cAEV,KAAKD,KAAL,CAAWS,UAAf,EAA2B;iBACpBT,KAAL,CAAWS,UAAX,CAAsB,KAAKR,KAAL,CAAWS,KAAjC;;;;;;kCAIMC,CAvCY,EAuCT;aACRH,QAAL,cACK,KAAKP,KADV;iBAESU,EAAEG,MAAF,CAASJ;;;;;+BAGX;YACCK,WADD,GACiB,KAAKf,KADtB,CACCe,WADD;;eAGL;;;wBAEaA,eAAe,EAA1B,IAAWA,eAAe,EAA1B,yCAFF;qBAGW,KAAKZ;;eAERF,KAAL,CAAWe,UAAX,GACC;kBACO,MADP;2BAAA;mBAGS,KAAKf,KAAL,CAAWS,KAHpB;uBAIY,0EAJZ;sBAKY,KAAKH,WALjB;wBAMc,KAAKF,cANnB;oBAOU,KAAKC;YARhB,GAWC;;cAAM,WAAU,4CAAhB;iBAA6BL,KAAL,CAAWS;;SAjBzC;;;;IA9CUO,MAAMC,SADM;CAA5B;;AAuEA,IAAMC,WAAW,SAAXA,QAAW;SAAS;;;UAAgBjB;GAAzB;CAAjB;;AAEA,IAAMkB,cAAcrB,oBAAoBoB,QAApB,CAApB;;;;"}